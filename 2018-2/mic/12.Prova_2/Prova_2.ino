/* Main.ino file generated by New Project wizard
 *
 * Created:   ter dez 4 2018
 * Processor: Arduino Mega
 * Compiler:  Arduino AVR (Proteus)
 */

 #define ESTOP 1
 #define ESTART 2
 #define ESENSORA 3
 #define ESENSORB 4
 #define ESENSORC 5
 #define ESENSORD 6
 #define EBUZZER 7
 
 const int sensorA = 3;
 const int sensorB = 4;
 const int sensorC = 5;
 const int sensorD = 6;
 const int botaoStart = 7;
 const int botaoStop = 8;
 const int laminaUp = 9;
 const int laminaDown = 10;
 const int esteira = 11;
 const int buzzer = 12;
 const int ledStop = 13;
 const int botaoEmergency = 2;
 const int modoEmergency = 0;
 
 bool atualSensorA = 0;
 bool atualSensorB = 0;
 bool atualSensorC = 0;
 bool atualSensorD = 0;
 bool atualStart = 0;
 bool atualStop = 0;
 bool atualEmergency = 0;
 int estadoAtual = ESTOP;
 bool flagStop = 0;
 bool flagEmergencyStop = 0;

void setup()
 { 
   pinMode(sensorA, INPUT);
   pinMode(sensorB, INPUT);
   pinMode(sensorC, INPUT);
   pinMode(sensorD, INPUT);
   pinMode(botaoStart, INPUT);
   pinMode(botaoStop, INPUT);
   pinMode(laminaUp, OUTPUT);
   pinMode(laminaDown, OUTPUT);
   pinMode(esteira, OUTPUT);
   pinMode(buzzer, OUTPUT);
   pinMode(ledStop, OUTPUT);
   
   attachInterrupt(modoEmergency, emergencyStop, LOW);
 }

void loop()
 {
   if(estadoAtual == ESTOP){
      atualStart = digitalRead(botaoStart);
      while(!atualStart){
	 atualStart = digitalRead(botaoStart);
	 if(flagEmergencyStop){
	    entrouEmergency();
	    flagEmergencyStop=0;
	 }
      }
      estadoStart();
   }
   if(estadoAtual == ESTART){
      atualSensorA = digitalRead(sensorA);
      while(!atualSensorA){
	 atualSensorA = digitalRead(sensorA);
	 if(flagEmergencyStop){
	    entrouEmergency();
	    flagEmergencyStop=0;
	 }
      }
      estadoSensorA();
   }
   if(estadoAtual == ESENSORA){
      atualSensorA = digitalRead(sensorA);
      atualSensorB = digitalRead(sensorB);
      while((!atualSensorA && !atualSensorB)||(atualSensorA && !atualSensorB)){
	 atualSensorA = digitalRead(sensorA);
	 atualSensorB = digitalRead(sensorB);
	 if(flagEmergencyStop){
	    entrouEmergency();
	    flagEmergencyStop=0;
	 }
      }
      if(atualSensorA && atualSensorB){
	 estadoSensorB();
      }
      else if(!atualSensorA && atualSensorB){
	 estadoBuzzer();
      }
   }   
   if(estadoAtual == EBUZZER){
      atualStop = digitalRead(botaoStop);
      while(!atualStop){
	 atualStop = digitalRead(botaoStop);
	 if(flagEmergencyStop){
	    entrouEmergency();
	    flagEmergencyStop=0;
	 }
      }
      estadoStop();
   }
   if(estadoAtual == ESENSORB){
      atualSensorC = digitalRead(sensorC);
      while(!atualSensorC){
	 atualSensorC = digitalRead(sensorC);
	 if(flagEmergencyStop){
	    entrouEmergency();
	    flagEmergencyStop=0;
	 }
      }
      estadoSensorC();
   }
   if(estadoAtual == ESENSORC){
      atualSensorD = digitalRead(sensorD);
      while(!atualSensorD){
	 atualSensorD = digitalRead(sensorD);
	 if(flagEmergencyStop){
	    entrouEmergency();
	    flagEmergencyStop=0;
	 }
      }
      estadoSensorD();
   }
   atualStop = digitalRead(botaoStop);
   if(atualStop){
      flagStop = 1;
      digitalWrite(ledStop, HIGH);
   }
   if(estadoAtual == ESENSORD){
      if(flagStop){
         estadoStop();
      }
      else{
	 estadoStart();
      }
   }
 }
 
void emergencyStop()
 {
   digitalWrite(laminaUp, LOW);
   digitalWrite(laminaDown, LOW);
   digitalWrite(esteira, LOW);
   digitalWrite(buzzer, LOW);
   
   flagEmergencyStop = 1;
   
   
   atualEmergency = digitalRead(botaoEmergency);
   while(!atualEmergency){
      atualEmergency = digitalRead(botaoEmergency);
   }
 }
 
bool estadoStop()
 {
   digitalWrite(laminaUp, LOW);
   digitalWrite(laminaDown, LOW);
   digitalWrite(esteira, LOW);
   digitalWrite(buzzer, LOW);
   
   estadoAtual = ESTOP;
   flagStop = 0;
   digitalWrite(ledStop, LOW);

   return true;
 }
 
bool estadoStart()
 {
   digitalWrite(laminaUp, LOW);
   digitalWrite(laminaDown, LOW);
   digitalWrite(esteira, HIGH);
   digitalWrite(buzzer, LOW);
   
   estadoAtual = ESTART;
   
   return true;
 }

bool estadoSensorA()
 {
   estadoAtual = ESENSORA;
   
   return true;
 }

bool estadoSensorB()
 {
   digitalWrite(laminaUp, LOW);
   digitalWrite(laminaDown, HIGH);
   digitalWrite(esteira, LOW);
   digitalWrite(buzzer, LOW);
   
   estadoAtual = ESENSORB;
   
   return true;
 }
 
bool estadoSensorC()
 {
   digitalWrite(laminaUp, HIGH);
   digitalWrite(laminaDown, LOW);
   digitalWrite(esteira, LOW);
   digitalWrite(buzzer, LOW);
   
   estadoAtual = ESENSORC;
   
   return true;
 }

bool estadoSensorD()
 {
   digitalWrite(laminaUp, LOW);
   digitalWrite(laminaDown, LOW);
   digitalWrite(esteira, HIGH);
   digitalWrite(buzzer, LOW);
   
   estadoAtual = ESENSORD;
   
   return true;
 }
 
bool estadoBuzzer()
 {
   digitalWrite(laminaUp, LOW);
   digitalWrite(laminaDown, LOW);
   digitalWrite(esteira, HIGH);
   digitalWrite(buzzer, HIGH);
   
   estadoAtual = EBUZZER;
   
   return true;
 }
 
 bool entrouEmergency()
 {
   switch(estadoAtual){
      case ESTART: return estadoStart();
      case ESTOP: return estadoStop();
      case ESENSORA: return estadoSensorA();
      case ESENSORB: return estadoSensorB();
      case ESENSORC: return estadoSensorC();
      case ESENSORD: return estadoSensorD();
      case EBUZZER: return estadoBuzzer();
      default: return false;
   } 
 }